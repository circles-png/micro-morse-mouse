name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  ÀùGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
    - name: Cache `.cargo`
      uses: actions/cache@v3.2.6
      with:
        path: ~/.cargo
        key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.toml') }}
        restore-keys: |
          ${{ runner.os }}-cargo-${{ hashFiles('Cargo.toml') }}
          ${{ runner.os }}-cargo

    - name: Cache `target`
      uses: actions/cache@v3.2.6
      with:
        path: joystick-mouse/target
        key: ${{ runner.os }}-cargo-target-${{ hashFiles('Cargo.toml') }}
        restore-keys: |
          ${{ runner.os }}-cargo-target-${{ hashFiles('Cargo.toml') }}
          ${{ runner.os }}-cargo-target

    - name: Install dependencies
      run: sudo apt-get install -y libxdo-dev libudev-dev
      if: matrix.os == 'ubuntu-latest'

    - name: Build
      run: cargo +nightly build --verbose --release --manifest-path joystick-mouse/Cargo.toml

    - name: Upload the artifact
      uses: actions/upload-artifact@v3.1.2
      with:
        name: joystick-mouse-${{ matrix.os }}
        path: ./joystick-mouse/target/release/joystick-mouse${{matrix.os == 'windows-latest' && '.exe' || ''}}
        if-no-files-found: error
